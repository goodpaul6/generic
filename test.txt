#import "basic.txt"

extern get_current_module_handle() : number
extern get_module_source_code(number) : string
extern get_module_expr_list(number) : array-native

extern get_expr_type(native) : number

extern add_expr_to_module(number, native) : void
extern insert_expr_into_module(number, native, number) : void

extern get_type_tag_from_name(string) : native
extern reference_function(string) : native
extern declare_variable(string, native, native, number) : native
extern reference_variable(string, native, number) : native

extern make_num_expr(number) : native
extern make_var_expr(native) : native
extern make_bin_expr(native, native, string) : native
extern make_write_expr(native) : native

#on_compile func on_compile() : void
{
	var module_handle : number = get_current_module_handle()
	
	var x_decl : native = declare_variable("x", get_type_tag_from_name("number"), null, null)
	
	add_expr_to_module(module_handle,
		make_bin_expr (
			make_var_expr(x_decl), make_num_expr(10), "="
		)
	)
	
	add_expr_to_module(module_handle,
		make_write_expr (
			make_var_expr(x_decl)
		)
	)
}
