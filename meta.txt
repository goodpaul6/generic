extern 
{
	make_array_of_length(number) : array-dynamic

	create_bool_type() : native
	create_char_type() : native
	create_number_type() : native
	create_string_type() : native
	create_function_type(native, array-native) : native
	create_array_type(native) : native
	create_native_type() : native
	create_dynamic_type() : native
	create_void_type() : native
	
	get_array_type_contained_type(native) : native

	compare_types(native, native) : bool

	get_current_module_index() : number
	get_module_source_code(number) : string
	get_module_expr_list(number, bool) : array-native

	get_expr_kind(native) : number

	add_expr_to_module(number, native) : void
	insert_expr_into_module(number, native, number) : void

	reference_function(string) : native
	get_func_decl_name(native) : string
	declare_variable(string, native, native, number) : native
	reference_variable(string, native, number) : native

	parse_code(string) : array-native

	make_num_expr(number) : native
	make_string_expr(string) : native
	make_var_expr(native) : native
	make_undeclared_var_expr(string) : native
	make_bin_expr(native, native, string) : native
	make_write_expr(native) : native
	make_call_expr(native, array-native) : native
	make_array_index_expr(native, native) : native

	get_expr_type(native) : native

	get_var_expr_name(native) : string

	resolve_expr_symbols(native) : bool
	resolve_expr_types(native) : bool

	get_func_expr_decl(native) : native
}

var expr_kind_null			= 0

var expr_kind_struct_decl	= 1
var expr_kind_struct_new	= 2

var expr_kind_colon			= 3
var expr_kind_dot			= 4

var expr_kind_var			= 5

var expr_kind_array_index	= 6

var expr_kind_bool			= 7
var expr_kind_char			= 8
var expr_kind_number		= 9
var expr_kind_string		= 10

var expr_kind_len			= 11
var expr_kind_write			= 12

var expr_kind_unary			= 13
var expr_kind_binary		= 14

var expr_kind_call			= 15

var expr_kind_paren			= 16
var expr_kind_array_literal	= 17
var expr_kind_block			= 18

var expr_kind_if			= 19
var expr_kind_while			= 20
var expr_kind_for			= 21

var expr_kind_return		= 22

var expr_kind_extern		= 23
var expr_kind_extern_list	= 24

var expr_kind_func			= 25

var expr_kind_atom			= 26

struct context_t
{
	line : number
	file : string
	scope : number
	cur_func : native
}

struct type_tag_func_t
{
	arg_types : array-native
	return_type : native
}

struct type_tag_member_t
{
	name : string
	index : number
	type : native
	default_value : native
}

struct type_tag_ds_t
{
	is_union : bool
	name : string
	size : number
	using_tags : array-native
	members : array-type_tag_member_t
}

union type_tag_data_t
{
	func_tag : type_tag_func_t
	contained : type_tag_t
	ds : type_tag_ds_t
}

struct type_tag_t
{
	ctx : context_t
	kind : number
	defined : bool
	finalized : bool
	_data : native
	data : type_tag_data_t
}

var type_tag_kind_void = 0
var type_tag_kind_dynamic = 1
var type_tag_kind_bool = 2
var type_tag_kind_char = 3
var type_tag_kind_number = 4
var type_tag_kind_string = 5
var type_tag_kind_func = 6
var type_tag_kind_array = 7
var type_tag_kind_native = 8

func create_type_tag(kind : number) : void
{
	
}

